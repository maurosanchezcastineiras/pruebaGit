/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tienda_videojuegos;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andrés Guillén
 */
public class InterfazPrincipal extends javax.swing.JFrame {

    private boolean esAdmin = false;
    private static Thread messageThread;
    String url = "jdbc:mysql://localhost:3306/anmafe_games_bd";
    String usuario = "root";
    String clave = "";
    int id;
    String nombre = "";
    /**
     * Creates new form interfazPrincipal
     *
     * @param esAdmin
     */
    public InterfazPrincipal(boolean esAdmin, int id) {
        this.id = id;
        this.esAdmin = esAdmin;
        this.nombre = nombre;
        initComponents();
        setLocationRelativeTo(null);
        panelMensajesNuevos.setVisible(false);
        consultarFichaje();
    
    }
    
    public void consultarFichaje(){
        Checkin checkin = new Checkin(id);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcomboBoxSeleccionarTabla = new javax.swing.JComboBox<>();
        labelSeleccionarTabla = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        botonRegistrar = new javax.swing.JButton();
        botonMensajes = new javax.swing.JButton();
        panelMensajesNuevos = new javax.swing.JPanel();
        labelMensajesNuevos = new javax.swing.JLabel();
        mostrarStock = new javax.swing.JButton();
        mostrarCredenciales = new javax.swing.JButton();
        btnFichajes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jcomboBoxSeleccionarTabla.setModel(obtenerTablas());
        jcomboBoxSeleccionarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboBoxSeleccionarTablaActionPerformed(evt);
            }
        });

        labelSeleccionarTabla.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelSeleccionarTabla.setText("Seleccionar tabla:");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"juan", null, null, null, null},
                {"gustavo", null, null, null, null},
                {"pedro", null, null, null, null},
                {"carlos", null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "nombre", "id", "tlf", "carro", "hijo"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        botonRegistrar.setText("Registrar empleado");
        botonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        botonMensajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMensajesActionPerformed(evt);
            }
        });

        panelMensajesNuevos.setBackground(new java.awt.Color(255, 0, 0));

        labelMensajesNuevos.setBackground(new java.awt.Color(0, 0, 255));
        labelMensajesNuevos.setForeground(new java.awt.Color(255, 255, 255));
        labelMensajesNuevos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMensajesNuevos.setText("0");

        javax.swing.GroupLayout panelMensajesNuevosLayout = new javax.swing.GroupLayout(panelMensajesNuevos);
        panelMensajesNuevos.setLayout(panelMensajesNuevosLayout);
        panelMensajesNuevosLayout.setHorizontalGroup(
            panelMensajesNuevosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMensajesNuevosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelMensajesNuevos, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelMensajesNuevosLayout.setVerticalGroup(
            panelMensajesNuevosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMensajesNuevosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelMensajesNuevos))
        );

        mostrarStock.setText("Stock");
        mostrarStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarStockActionPerformed(evt);
            }
        });

        mostrarCredenciales.setText("Credenciales");
        mostrarCredenciales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarCredencialesActionPerformed(evt);
            }
        });

        btnFichajes.setText("Fichajes");
        btnFichajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFichajesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelSeleccionarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcomboBoxSeleccionarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mostrarStock, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mostrarCredenciales)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFichajes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonMensajes, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelMensajesNuevos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonMensajes)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcomboBoxSeleccionarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelSeleccionarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mostrarStock, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mostrarCredenciales, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFichajes, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelMensajesNuevos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcomboBoxSeleccionarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboBoxSeleccionarTablaActionPerformed
        Object tablaEscogida = jcomboBoxSeleccionarTabla.getSelectedItem();

        if (tablaEscogida != null) {
            System.out.println("La tabla escogida es: " + tablaEscogida.toString());

            DefaultTableModel modelo = new DefaultTableModel(
                    obtenerDatos(tablaEscogida.toString()), obtenerCampos(tablaEscogida.toString())
            );

            tabla.setModel(modelo);

        } else {
            System.out.println("Ningún elemento seleccionado");
        }
    }//GEN-LAST:event_jcomboBoxSeleccionarTablaActionPerformed

    private void botonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarActionPerformed
        VentanaRegistro ventanaregistro = new VentanaRegistro();
        ventanaregistro.setVisible(true);
    }//GEN-LAST:event_botonRegistrarActionPerformed

    private void botonMensajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMensajesActionPerformed
        VentanaMensajes mensajes = new VentanaMensajes();
        mensajes.iniciarHiloMensajes();
        mensajes.setVisible(true);
    }//GEN-LAST:event_botonMensajesActionPerformed

    private void mostrarStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarStockActionPerformed
        
        Stock2 s = new Stock2();
        s.setVisible(true);
        
        
    }//GEN-LAST:event_mostrarStockActionPerformed

    private void mostrarCredencialesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarCredencialesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mostrarCredencialesActionPerformed

    private void btnFichajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFichajesActionPerformed
        Fichajes f = new Fichajes();
        f.setVisible(true);
    }//GEN-LAST:event_btnFichajesActionPerformed

    public DefaultComboBoxModel obtenerTablas() {

        // Consulta SQL para insertar datos
        String sql = "SHOW TABLES";

        DefaultComboBoxModel modelo = new DefaultComboBoxModel();

        if (esAdmin) {

            try (
                    // Establecer conexión a la base de datos
                    Connection conexion = DriverManager.getConnection(url, usuario, clave); // Crear una declaración preparada para evitar la inyección SQL y mejorar el rendimiento
                     PreparedStatement pstmt = conexion.prepareStatement(sql)) {

                // Ejecutar la consulta
                ResultSet resultset = pstmt.executeQuery(sql);

                while (resultset.next()) {
                    modelo.addElement(resultset.getString(1));
                }

            } catch (SQLException e) {
                System.out.println("Error al insertar datos en la tabla: " + e.getMessage());
            }

        } else {

            modelo.addElement("ventas");
            modelo.addElement("tiendas");
            modelo.addElement("productos");
            modelo.addElement("inventario");
        }

        return modelo;
    }

    
    public String[][] obtenerDatos(String nombreTabla) {
        String data[][] = {
            {"1", "Juan", "20"},
            {"2", "María", "25"},
            {"3", "Pedro", "30"}
        };

        try {
            Connection conn = DriverManager.getConnection(url, usuario, clave);

            String sql = "SELECT * FROM " + nombreTabla;
            PreparedStatement statement = conn.prepareStatement(sql);

            ResultSet resultSet = statement.executeQuery();

            ResultSetMetaData datosTabla = resultSet.getMetaData();
            int numColumnas = datosTabla.getColumnCount();

            int numRegistros = 0;
            while (resultSet.next()) {
                numRegistros++;
            }
            resultSet.close();

            // Crear un array bidimensional para almacenar los datos del ResultSet
            data = new String[numRegistros][numColumnas];

            //Esto no funciona
            //resultSet.beforeFirst();
            ResultSet resultSett = statement.executeQuery();
            // Recorrer el ResultSet y almacenar los datos en el array
            int row = 0;
            while (resultSett.next()) {
                for (int col = 0; col < numColumnas; col++) {
                    // Obtener el valor de la columna actual en forma de String
                    String value = resultSett.getString(col + 1);
                    // Almacenar el valor en el array
                    System.out.println("Valor: " + value);
                    data[row][col] = value;
                }
                row++;
            }
            resultSett.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return data;
    }

    public String[] obtenerCampos(String nombreTabla) {
        String[] campos = null;

        try {
            Connection conn = DriverManager.getConnection(url, usuario, clave);

            String sql = "SELECT * FROM " + nombreTabla;
            PreparedStatement statement = conn.prepareStatement(sql);

            ResultSet resultSet = statement.executeQuery();

            ResultSetMetaData datosTabla = resultSet.getMetaData();
            int numColumnas = datosTabla.getColumnCount();

            campos = new String[numColumnas];
            for (int j = 1; j <= numColumnas; j++) {
                campos[j - 1] = datosTabla.getColumnLabel(j);
            }

            resultSet.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return campos;
    }

    /**
     * Método que muestra el número de mensajes nuevos en el inicio Realiza una
     * consulta a la base de datos para determinar los nuevos mensajes de los
     * clientes y mostrar el total.
     */
    public void comprobarMensajesNuevos() {

        try {
            Connection conn = DriverManager.getConnection(url, usuario, clave);

            String sql = "SELECT * FROM incidentes WHERE cliente_id IS NOT NULL AND visto = 0;";
            PreparedStatement statement = conn.prepareStatement(sql);

            ResultSet resultSet = statement.executeQuery();

            int numeroMensajes = 0;
            while (resultSet.next()) {
                System.out.println("ID del cliente: " + resultSet.getString("cliente_id"));
                numeroMensajes++;
            }

            System.out.println("Hay " + numeroMensajes + " mensajes no vistos");

            if (numeroMensajes > 0) {
                panelMensajesNuevos.setVisible(true);
                labelMensajesNuevos.setText(numeroMensajes + "");
            } else {
                panelMensajesNuevos.setVisible(false);
            }

            repaint();
            resultSet.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * Este método crea un hilo que cada cinco segundos llamará al método
     * comprobarMensajesNuevos para determinar si hay nuevos mensajes y mostrar
     * el resultado en tiempo real.
     */
    public void iniciarHiloMensajes() {
        messageThread = new Thread(() -> {
            while (!Thread.interrupted()) {
                try {
                    comprobarMensajesNuevos();
                    Thread.sleep(5000); // Esperar 5 segundos antes de la próxima comprobación
                } catch (InterruptedException e) {
                    // Manejar la interrupción del hilo (por ejemplo, al cerrar la aplicación)
                    System.out.println("El hilo de verificación de mensajes fue interrumpido.");
                    return;
                }
            }
        });
        messageThread.setName("Comprobando mensajes nuevos");
        // Iniciar el hilo
        messageThread.start();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.out.println("A punto de iniciar");
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazPrincipal(false).setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonMensajes;
    private javax.swing.JButton botonRegistrar;
    private javax.swing.JButton btnFichajes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcomboBoxSeleccionarTabla;
    private static javax.swing.JLabel labelMensajesNuevos;
    private javax.swing.JLabel labelSeleccionarTabla;
    private javax.swing.JButton mostrarCredenciales;
    private javax.swing.JButton mostrarStock;
    private static javax.swing.JPanel panelMensajesNuevos;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
